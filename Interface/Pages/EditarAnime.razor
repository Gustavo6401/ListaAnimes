@page "/Anime/Edit/{Id}"
@using Dominio.DTOs;
@using Infraestrutura.RequisitarAPI.API;
@using System.Net;
@inject AnimeAPI api;
@inject IJSRuntime JsRuntime;
@inject NavigationManager Navigation;

<h3>Editar Anime</h3>

<div class="form-group">
    <label class="control-label">Nome</label>
    <input class="form-control" type="text" @bind-value=dto.Nome />
</div>
<div class="form-group">
    <label class="control-label">Número de Episódios</label>
    <input class="form-control" type="number" @bind-value=dto.NumeroEpisodios />
</div>
<div class="form-group">
    <label class="control-label">Status</label>
    <select class="form-control" @bind=dto.Status>
        <option>Assistindo</option>
        <option>Assistido</option>
        <option>Interessado</option>
    </select>
</div>
<div class="form-group">
    <label class="control-label">Episódio que Parei</label>
    <input class="form-control" type="number" @bind-value=dto.EpQueParei />
</div>
<div class="form-group">
    <a class="btn btn-warning" @onclick=Update>Editar Anime</a>
</div>

@code {
    AnimeDTO dto = new();

    [Parameter]
    public string Id { get; set; }
    int id = 0;

    protected override async Task OnInitializedAsync()
    {
        id = Convert.ToInt32(Id);

        dto = await api.ConsultarPorId(id);
    }

    public async Task Update()
    {
        id = Convert.ToInt32(Id);

        HttpResponseMessage response = await api.AlterarDados(id, dto);

        if (response.StatusCode == HttpStatusCode.OK)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Dados Modificados com Sucesso!");

            Navigation.NavigateTo("/Anime");
        }
        else
            await JsRuntime.InvokeVoidAsync("alert", "Ocorreu um Erro! Verifique o Console do Navegador!");
    }
}
